// Generated by CoffeeScript 1.12.2
(function() {
  var _, archives_, errors_, setLabel, wdk;

  _ = require('../lib/utils');

  wdk = require('wikidata-sdk');

  errors_ = require('../lib/errors');

  setLabel = require('../lib/set_label');

  archives_ = require('../lib/archives');

  module.exports = {
    post: function(req, res) {
      var body, entity, label, language, property;
      body = req.body;
      _.log(body, 'body');
      entity = body.entity, language = body.language, label = body.label;
      if (!wdk.isWikidataEntityId(entity)) {
        return errors_.e400(res, 'invalid entity id', body);
      }
      if (!/\w{2}(\-\w{2})?/.test(language)) {
        return errors_.e400(res, 'invalid language', body);
      }
      if (!(_.isString(label) && label.length > 0)) {
        return errors_.e400(res, 'invalid label', body);
      }
      property = "label:" + language;
      if (archives_.repeatingHistory(entity, property, label)) {
        return errors_.e400(res, 'this label has already been posted', body);
      }
      return setLabel(entity, language, label).tap(archives_.updateArchives.bind(null, entity, property, label)).then(res.json.bind(res))["catch"](errors_.e500.bind(null, res));
    }
  };

}).call(this);

//# sourceMappingURL=label.js.map
